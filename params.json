{
  "name": "Alterrae-backend",
  "tagline": "A RESTful API for Sistearth v4 implemented in Java",
  "body": "Alterrae Backend\r\n=================\r\n\r\n[![Build Status](https://travis-ci.org/mbarberot/alterrae-backend.svg?branch=master)](https://travis-ci.org/mbarberot/alterrae-backend)\r\n[![Coverage Status](https://coveralls.io/repos/github/mbarberot/alterrae-backend/badge.svg?branch=master)](https://coveralls.io/github/mbarberot/alterrae-backend?branch=master)\r\n\r\nA RESTful API for Alterrae game, implemented in Java\r\n\r\nHow to use\r\n----------\r\n\r\n### What you need\r\n\r\n* Java 8\r\n* Maven\r\n* Docker & docker-compose\r\n* Source code\r\n\r\n### Build\r\n\r\n``mvn clean install``\r\n\r\nThis will build, test, package code and build docker image.\r\n\r\n### Run\r\n\r\n``docker-compose up`` or ``docker-compose start``\r\n\r\nThis will run both server and databse container + adminer to manage db\r\n\r\nUseful tools\r\n------------\r\n\r\n### Sonar\r\n\r\nSource code analysis tool.\r\n\r\n  1. Run Sonarqube server with docker\r\n    * The first time : ``docker run -d --name sonarqube -p 9000:9000 -p 9092:9092 sonarqube:5.1``\r\n    * Nex time : ``docker start sonarqube``\r\n  2. Launch analysis with maven\r\n    * ``mvn sonar:sonar``\r\n  \r\n### Adminer\r\n\r\nPHPMyAdmin-like, but lighter\r\n\r\n  1. Run with docker : ``docker run -d -p 8888:80 --link alterraebackend_database_1:database clue/adminer``  \r\n  2. Go to http://localhost:8888\r\n  3. Login using db credential and host will be 'database'.\r\n  \r\n### Keytool (provided by java jdk)\r\n\r\nCreating keystore (example for the test keystore) : \r\n- run ``keytool -keystore keystore -alias alterrae -genkey -keyalg RSA``  \r\n- use password : ``alterrae``\r\n- At question \"What is your first and last name?\" put your url (ie: api.alterrae.com)\r\n \r\nTools\r\n-----\r\n\r\n### Dev\r\n\r\n* Java\r\n* Spark framework (light, easy and simple)\r\n* Guava\r\n* Sql2o\r\n* Jackson\r\n* Lombok\r\n* JUnit\r\n\r\n### Deployment\r\n\r\n* Docker\r\n* docker-compose\r\n* MariaDB (+ official docker image)\r\n\r\nReason (vs PHP / Symfony backend)\r\n---------------------------------\r\n\r\n* KISS\r\n* No more \"magic\" framework (thinking to you JEE and Symfony)\r\n* Dev comfort : explicit types, easier to monitor/debug, maven \r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}